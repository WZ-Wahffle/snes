#ifndef SPC_INSTRUCTIONS_H_
#define SPC_INSTRUCTIONS_H_

#include "types.h"

#define OP(name) void spc_##name(spc_addressing_mode_t mode)
#define LEGALADDRMODES(modes)                                                  \
    ASSERT((mode & (modes)) != 0,                                              \
           "Illegal address mode for mask: expected %d, found %s", modes,      \
           addressing_mode_strings[(uint8_t)log2(mode)])

OP(lda);
OP(ldx);
OP(ldy);
OP(ldw);
OP(sta);
OP(stx);
OP(sty);
OP(stw);
OP(txs);
OP(tsx);
OP(txa);
OP(tax);
OP(tya);
OP(tay);
OP(inx);
OP(dex);
OP(iny);
OP(dey);
OP(bra);
OP(beq);
OP(bne);
OP(bmi);
OP(bpl);
OP(bcc);
OP(bcs);
OP(bvs);
OP(bvc);
OP(bbs0);
OP(bbs1);
OP(bbs2);
OP(bbs3);
OP(bbs4);
OP(bbs5);
OP(bbs6);
OP(bbs7);
OP(bbc0);
OP(bbc1);
OP(bbc2);
OP(bbc3);
OP(bbc4);
OP(bbc5);
OP(bbc6);
OP(bbc7);
OP(cbne);
OP(dbnz);
OP(jmp);
OP(jsr);
OP(jsp);
OP(jst0);
OP(jst1);
OP(jst2);
OP(jst3);
OP(jst4);
OP(jst5);
OP(jst6);
OP(jst7);
OP(jst8);
OP(jst9);
OP(jsta);
OP(jstb);
OP(jstc);
OP(jstd);
OP(jste);
OP(jstf);
OP(rts);
OP(rti);
OP(pha);
OP(pla);
OP(phx);
OP(plx);
OP(phy);
OP(ply);
OP(php);
OP(plp);
OP(mov);
OP(cmp);
OP(cpx);
OP(cpy);
OP(inc);
OP(dec);
OP(inw);
OP(dew);
OP(adw);
OP(sbw);
OP(cpw);
OP(adc);
OP(sbc);
OP(and);
OP(ora);
OP(eor);
OP(mul);
OP(div);
OP(asl);
OP(lsr);
OP(ror);
OP(rol);
OP(sep);
OP(clp);
OP(sec);
OP(clc);
OP(sei);
OP(cli);
OP(clv);
OP(notc);
OP(set0);
OP(set1);
OP(set2);
OP(set3);
OP(set4);
OP(set5);
OP(set6);
OP(set7);
OP(clr0);
OP(clr1);
OP(clr2);
OP(clr3);
OP(clr4);
OP(clr5);
OP(clr6);
OP(clr7);
OP(and1);
OP(or1);
OP(eor1);
OP(ld1);
OP(st1);
OP(not1);
OP(tset1);
OP(tclr1);
OP(xcn);
OP(brk);
OP(daa);
OP(das);
#endif
